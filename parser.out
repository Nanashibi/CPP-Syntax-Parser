Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     type_specifier -> INT
Rule 3     type_specifier -> CHAR
Rule 4     type_specifier -> FLOAT
Rule 5     type_specifier -> VOID
Rule 6     params -> type_specifier ID
Rule 7     params -> type_specifier ID COMMA params
Rule 8     declaration -> type_specifier ID SEMICOLON
Rule 9     declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON
Rule 10    declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
Rule 11    declaration -> type_specifier ID LBRACE program RBRACE
Rule 12    declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON
Rule 13    declaration -> type_specifier ID LBRACE RBRACE
Rule 14    statements -> statement
Rule 15    statements -> declaration
Rule 16    statements -> statement statements
Rule 17    statements -> declaration statements
Rule 18    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 19    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 20    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 21    statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
Rule 22    statement -> ID EQUALS expression SEMICOLON
Rule 23    statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
Rule 24    expression -> expression PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression MUL expression
Rule 27    expression -> expression DIVIDE expression
Rule 28    expression -> LPAREN expression RPAREN
Rule 29    expression -> expression LESSTHAN expression
Rule 30    expression -> expression GREATERTHAN expression
Rule 31    expression -> expression LESSTHANEQ expression
Rule 32    expression -> expression GREATERTHANEQ expression
Rule 33    expression -> expression DEQUALS expression
Rule 34    expression -> ID
Rule 35    expression -> NUMBER
Rule 36    assignment -> ID EQUALS expression

Terminals, with rules where they appear

BREAK                : 23
CASE                 : 23
CHAR                 : 3
COLON                : 23 23
COMMA                : 7
DEFAULT              : 23
DEQUALS              : 33
DIVIDE               : 27
ELSE                 : 19
EQUALS               : 22 36
FLOAT                : 4
FOR                  : 21
GREATERTHAN          : 30
GREATERTHANEQ        : 32
ID                   : 6 7 8 9 10 11 12 13 22 34 36
IF                   : 18 19
INT                  : 2
LBRACE               : 10 11 12 13 18 19 19 20 21 23
LESSTHAN             : 29
LESSTHANEQ           : 31
LPAREN               : 9 10 18 19 20 21 23 28
MINUS                : 25
MUL                  : 26
NUMBER               : 23 35
PLUS                 : 24
RBRACE               : 10 11 12 13 18 19 19 20 21 23
RPAREN               : 9 10 18 19 20 21 23 28
SEMICOLON            : 8 9 12 21 21 22 23
SWITCH               : 23
VOID                 : 5
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

assignment           : 21 21
declaration          : 15 17
expression           : 18 19 20 21 22 23 24 24 25 25 26 26 27 27 28 29 29 30 30 31 31 32 32 33 33 36
params               : 7 9 10
program              : 10 11 12 18 19 19 20 21 23 23 0
statement            : 14 16
statements           : 1 16 17
type_specifier       : 6 7 8 9 10 11 12 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)
    RBRACE          reduce using rule 1 (program -> statements .)
    BREAK           reduce using rule 1 (program -> statements .)


state 3

    (14) statements -> statement .
    (16) statements -> statement . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    $end            reduce using rule 14 (statements -> statement .)
    RBRACE          reduce using rule 14 (statements -> statement .)
    BREAK           reduce using rule 14 (statements -> statement .)
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    statement                      shift and go to state 3
    statements                     shift and go to state 15
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 4

    (15) statements -> declaration .
    (17) statements -> declaration . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    $end            reduce using rule 15 (statements -> declaration .)
    RBRACE          reduce using rule 15 (statements -> declaration .)
    BREAK           reduce using rule 15 (statements -> declaration .)
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    declaration                    shift and go to state 4
    statements                     shift and go to state 16
    statement                      shift and go to state 3
    type_specifier                 shift and go to state 10

state 5

    (18) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 17


state 6

    (20) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 18


state 7

    (21) statement -> FOR . LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 19


state 8

    (22) statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 20


state 9

    (23) statement -> SWITCH . LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE

    LPAREN          shift and go to state 21


state 10

    (8) declaration -> type_specifier . ID SEMICOLON
    (9) declaration -> type_specifier . ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> type_specifier . ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> type_specifier . ID LBRACE program RBRACE
    (12) declaration -> type_specifier . ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> type_specifier . ID LBRACE RBRACE

    ID              shift and go to state 22


state 11

    (2) type_specifier -> INT .

    ID              reduce using rule 2 (type_specifier -> INT .)


state 12

    (3) type_specifier -> CHAR .

    ID              reduce using rule 3 (type_specifier -> CHAR .)


state 13

    (4) type_specifier -> FLOAT .

    ID              reduce using rule 4 (type_specifier -> FLOAT .)


state 14

    (5) type_specifier -> VOID .

    ID              reduce using rule 5 (type_specifier -> VOID .)


state 15

    (16) statements -> statement statements .

    $end            reduce using rule 16 (statements -> statement statements .)
    RBRACE          reduce using rule 16 (statements -> statement statements .)
    BREAK           reduce using rule 16 (statements -> statement statements .)


state 16

    (17) statements -> declaration statements .

    $end            reduce using rule 17 (statements -> declaration statements .)
    RBRACE          reduce using rule 17 (statements -> declaration statements .)
    BREAK           reduce using rule 17 (statements -> declaration statements .)


state 17

    (18) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (19) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 24

state 18

    (20) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 27

state 19

    (21) statement -> FOR LPAREN . assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (36) assignment -> . ID EQUALS expression

    ID              shift and go to state 29

    assignment                     shift and go to state 28

state 20

    (22) statement -> ID EQUALS . expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 30

state 21

    (23) statement -> SWITCH LPAREN . expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 31

state 22

    (8) declaration -> type_specifier ID . SEMICOLON
    (9) declaration -> type_specifier ID . LPAREN params RPAREN SEMICOLON
    (10) declaration -> type_specifier ID . LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> type_specifier ID . LBRACE program RBRACE
    (12) declaration -> type_specifier ID . LBRACE program RBRACE SEMICOLON
    (13) declaration -> type_specifier ID . LBRACE RBRACE

    SEMICOLON       shift and go to state 32
    LPAREN          shift and go to state 33
    LBRACE          shift and go to state 34


state 23

    (28) expression -> LPAREN . expression RPAREN
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 35

state 24

    (18) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (19) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 25

    (34) expression -> ID .

    RPAREN          reduce using rule 34 (expression -> ID .)
    PLUS            reduce using rule 34 (expression -> ID .)
    MINUS           reduce using rule 34 (expression -> ID .)
    MUL             reduce using rule 34 (expression -> ID .)
    DIVIDE          reduce using rule 34 (expression -> ID .)
    LESSTHAN        reduce using rule 34 (expression -> ID .)
    GREATERTHAN     reduce using rule 34 (expression -> ID .)
    LESSTHANEQ      reduce using rule 34 (expression -> ID .)
    GREATERTHANEQ   reduce using rule 34 (expression -> ID .)
    DEQUALS         reduce using rule 34 (expression -> ID .)
    SEMICOLON       reduce using rule 34 (expression -> ID .)


state 26

    (35) expression -> NUMBER .

    RPAREN          reduce using rule 35 (expression -> NUMBER .)
    PLUS            reduce using rule 35 (expression -> NUMBER .)
    MINUS           reduce using rule 35 (expression -> NUMBER .)
    MUL             reduce using rule 35 (expression -> NUMBER .)
    DIVIDE          reduce using rule 35 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 35 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 35 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 35 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 35 (expression -> NUMBER .)
    DEQUALS         reduce using rule 35 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 35 (expression -> NUMBER .)


state 27

    (20) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 28

    (21) statement -> FOR LPAREN assignment . SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE

    SEMICOLON       shift and go to state 47


state 29

    (36) assignment -> ID . EQUALS expression

    EQUALS          shift and go to state 48


state 30

    (22) statement -> ID EQUALS expression . SEMICOLON
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    SEMICOLON       shift and go to state 49
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 31

    (23) statement -> SWITCH LPAREN expression . RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 32

    (8) declaration -> type_specifier ID SEMICOLON .

    IF              reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    WHILE           reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    FOR             reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    ID              reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    SWITCH          reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    INT             reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    CHAR            reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    FLOAT           reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    VOID            reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    $end            reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    RBRACE          reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)
    BREAK           reduce using rule 8 (declaration -> type_specifier ID SEMICOLON .)


state 33

    (9) declaration -> type_specifier ID LPAREN . params RPAREN SEMICOLON
    (10) declaration -> type_specifier ID LPAREN . params RPAREN LBRACE program RBRACE
    (6) params -> . type_specifier ID
    (7) params -> . type_specifier ID COMMA params
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    type_specifier                 shift and go to state 51
    params                         shift and go to state 52

state 34

    (11) declaration -> type_specifier ID LBRACE . program RBRACE
    (12) declaration -> type_specifier ID LBRACE . program RBRACE SEMICOLON
    (13) declaration -> type_specifier ID LBRACE . RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    RBRACE          shift and go to state 54
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    type_specifier                 shift and go to state 10
    program                        shift and go to state 53
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4

state 35

    (28) expression -> LPAREN expression . RPAREN
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 36

    (18) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (19) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 56


state 37

    (24) expression -> expression PLUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 57

state 38

    (25) expression -> expression MINUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 58

state 39

    (26) expression -> expression MUL . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 59

state 40

    (27) expression -> expression DIVIDE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 60

state 41

    (29) expression -> expression LESSTHAN . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 61

state 42

    (30) expression -> expression GREATERTHAN . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 62

state 43

    (31) expression -> expression LESSTHANEQ . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 63

state 44

    (32) expression -> expression GREATERTHANEQ . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 64

state 45

    (33) expression -> expression DEQUALS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 65

state 46

    (20) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 66


state 47

    (21) statement -> FOR LPAREN assignment SEMICOLON . expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 67

state 48

    (36) assignment -> ID EQUALS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . LPAREN expression RPAREN
    (29) expression -> . expression LESSTHAN expression
    (30) expression -> . expression GREATERTHAN expression
    (31) expression -> . expression LESSTHANEQ expression
    (32) expression -> . expression GREATERTHANEQ expression
    (33) expression -> . expression DEQUALS expression
    (34) expression -> . ID
    (35) expression -> . NUMBER

    LPAREN          shift and go to state 23
    ID              shift and go to state 25
    NUMBER          shift and go to state 26

    expression                     shift and go to state 68

state 49

    (22) statement -> ID EQUALS expression SEMICOLON .

    IF              reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    SWITCH          reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    CHAR            reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    VOID            reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 22 (statement -> ID EQUALS expression SEMICOLON .)


state 50

    (23) statement -> SWITCH LPAREN expression RPAREN . LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE

    LBRACE          shift and go to state 69


state 51

    (6) params -> type_specifier . ID
    (7) params -> type_specifier . ID COMMA params

    ID              shift and go to state 70


state 52

    (9) declaration -> type_specifier ID LPAREN params . RPAREN SEMICOLON
    (10) declaration -> type_specifier ID LPAREN params . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 71


state 53

    (11) declaration -> type_specifier ID LBRACE program . RBRACE
    (12) declaration -> type_specifier ID LBRACE program . RBRACE SEMICOLON

    RBRACE          shift and go to state 72


state 54

    (13) declaration -> type_specifier ID LBRACE RBRACE .

    IF              reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    WHILE           reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    FOR             reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    ID              reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    SWITCH          reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    INT             reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    CHAR            reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    FLOAT           reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    VOID            reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    $end            reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    RBRACE          reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)
    BREAK           reduce using rule 13 (declaration -> type_specifier ID LBRACE RBRACE .)


state 55

    (28) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    DEQUALS         reduce using rule 28 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 28 (expression -> LPAREN expression RPAREN .)


state 56

    (18) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (19) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 73
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 57

    (24) expression -> expression PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          reduce using rule 24 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 24 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 24 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 24 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 24 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 24 (expression -> expression PLUS expression .)
    DEQUALS         reduce using rule 24 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression PLUS expression .)
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40

  ! MUL             [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESSTHAN        [ shift and go to state 41 ]
  ! GREATERTHAN     [ shift and go to state 42 ]
  ! LESSTHANEQ      [ shift and go to state 43 ]
  ! GREATERTHANEQ   [ shift and go to state 44 ]
  ! DEQUALS         [ shift and go to state 45 ]


state 58

    (25) expression -> expression MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 25 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 25 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 25 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 25 (expression -> expression MINUS expression .)
    DEQUALS         reduce using rule 25 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MINUS expression .)
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40

  ! MUL             [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESSTHAN        [ shift and go to state 41 ]
  ! GREATERTHAN     [ shift and go to state 42 ]
  ! LESSTHANEQ      [ shift and go to state 43 ]
  ! GREATERTHANEQ   [ shift and go to state 44 ]
  ! DEQUALS         [ shift and go to state 45 ]


state 59

    (26) expression -> expression MUL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          reduce using rule 26 (expression -> expression MUL expression .)
    PLUS            reduce using rule 26 (expression -> expression MUL expression .)
    MINUS           reduce using rule 26 (expression -> expression MUL expression .)
    MUL             reduce using rule 26 (expression -> expression MUL expression .)
    DIVIDE          reduce using rule 26 (expression -> expression MUL expression .)
    LESSTHAN        reduce using rule 26 (expression -> expression MUL expression .)
    GREATERTHAN     reduce using rule 26 (expression -> expression MUL expression .)
    LESSTHANEQ      reduce using rule 26 (expression -> expression MUL expression .)
    GREATERTHANEQ   reduce using rule 26 (expression -> expression MUL expression .)
    DEQUALS         reduce using rule 26 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression MUL expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MUL             [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! LESSTHAN        [ shift and go to state 41 ]
  ! GREATERTHAN     [ shift and go to state 42 ]
  ! LESSTHANEQ      [ shift and go to state 43 ]
  ! GREATERTHANEQ   [ shift and go to state 44 ]
  ! DEQUALS         [ shift and go to state 45 ]


state 60

    (27) expression -> expression DIVIDE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    RPAREN          reduce using rule 27 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 27 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 27 (expression -> expression DIVIDE expression .)
    MUL             reduce using rule 27 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 27 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 27 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 27 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 27 (expression -> expression DIVIDE expression .)
    DEQUALS         reduce using rule 27 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MUL             [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! LESSTHAN        [ shift and go to state 41 ]
  ! GREATERTHAN     [ shift and go to state 42 ]
  ! LESSTHANEQ      [ shift and go to state 43 ]
  ! GREATERTHANEQ   [ shift and go to state 44 ]
  ! DEQUALS         [ shift and go to state 45 ]


state 61

    (29) expression -> expression LESSTHAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATERTHANEQ resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
    RPAREN          reduce using rule 29 (expression -> expression LESSTHAN expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45

  ! PLUS            [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! MUL             [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHANEQ      [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHANEQ   [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]
  ! DEQUALS         [ reduce using rule 29 (expression -> expression LESSTHAN expression .) ]


state 62

    (30) expression -> expression GREATERTHAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATERTHANEQ resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
    RPAREN          reduce using rule 30 (expression -> expression GREATERTHAN expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45

  ! PLUS            [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! MUL             [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHANEQ      [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHANEQ   [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]
  ! DEQUALS         [ reduce using rule 30 (expression -> expression GREATERTHAN expression .) ]


state 63

    (31) expression -> expression LESSTHANEQ expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATERTHANEQ resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
    RPAREN          reduce using rule 31 (expression -> expression LESSTHANEQ expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LESSTHANEQ expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45

  ! PLUS            [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! MUL             [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! GREATERTHAN     [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHANEQ      [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! GREATERTHANEQ   [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]
  ! DEQUALS         [ reduce using rule 31 (expression -> expression LESSTHANEQ expression .) ]


state 64

    (32) expression -> expression GREATERTHANEQ expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATERTHANEQ resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
    RPAREN          reduce using rule 32 (expression -> expression GREATERTHANEQ expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression GREATERTHANEQ expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45

  ! PLUS            [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! MUL             [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! GREATERTHAN     [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! LESSTHANEQ      [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! GREATERTHANEQ   [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]
  ! DEQUALS         [ reduce using rule 32 (expression -> expression GREATERTHANEQ expression .) ]


state 65

    (33) expression -> expression DEQUALS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATERTHANEQ resolved as shift
  ! shift/reduce conflict for DEQUALS resolved as shift
    RPAREN          reduce using rule 33 (expression -> expression DEQUALS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression DEQUALS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45

  ! PLUS            [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! MUL             [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! LESSTHANEQ      [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! GREATERTHANEQ   [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]
  ! DEQUALS         [ reduce using rule 33 (expression -> expression DEQUALS expression .) ]


state 66

    (20) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 74
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 67

    (21) statement -> FOR LPAREN assignment SEMICOLON expression . SEMICOLON assignment RPAREN LBRACE program RBRACE
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 68

    (36) assignment -> ID EQUALS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESSTHAN expression
    (30) expression -> expression . GREATERTHAN expression
    (31) expression -> expression . LESSTHANEQ expression
    (32) expression -> expression . GREATERTHANEQ expression
    (33) expression -> expression . DEQUALS expression

    SEMICOLON       reduce using rule 36 (assignment -> ID EQUALS expression .)
    RPAREN          reduce using rule 36 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIVIDE          shift and go to state 40
    LESSTHAN        shift and go to state 41
    GREATERTHAN     shift and go to state 42
    LESSTHANEQ      shift and go to state 43
    GREATERTHANEQ   shift and go to state 44
    DEQUALS         shift and go to state 45


state 69

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE . CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE

    CASE            shift and go to state 76


state 70

    (6) params -> type_specifier ID .
    (7) params -> type_specifier ID . COMMA params

    RPAREN          reduce using rule 6 (params -> type_specifier ID .)
    COMMA           shift and go to state 77


state 71

    (9) declaration -> type_specifier ID LPAREN params RPAREN . SEMICOLON
    (10) declaration -> type_specifier ID LPAREN params RPAREN . LBRACE program RBRACE

    SEMICOLON       shift and go to state 78
    LBRACE          shift and go to state 79


state 72

    (11) declaration -> type_specifier ID LBRACE program RBRACE .
    (12) declaration -> type_specifier ID LBRACE program RBRACE . SEMICOLON

    IF              reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    WHILE           reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    FOR             reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    ID              reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    SWITCH          reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    INT             reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    CHAR            reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    FLOAT           reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    VOID            reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    $end            reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    RBRACE          reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    BREAK           reduce using rule 11 (declaration -> type_specifier ID LBRACE program RBRACE .)
    SEMICOLON       shift and go to state 80


state 73

    (18) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (19) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE

    RBRACE          shift and go to state 81


state 74

    (20) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE

    RBRACE          shift and go to state 82


state 75

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON . assignment RPAREN LBRACE program RBRACE
    (36) assignment -> . ID EQUALS expression

    ID              shift and go to state 29

    assignment                     shift and go to state 83

state 76

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE . NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE

    NUMBER          shift and go to state 84


state 77

    (7) params -> type_specifier ID COMMA . params
    (6) params -> . type_specifier ID
    (7) params -> . type_specifier ID COMMA params
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    type_specifier                 shift and go to state 51
    params                         shift and go to state 85

state 78

    (9) declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .

    IF              reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    ID              reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    SWITCH          reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    INT             reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    CHAR            reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    FLOAT           reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    VOID            reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)
    BREAK           reduce using rule 9 (declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON .)


state 79

    (10) declaration -> type_specifier ID LPAREN params RPAREN LBRACE . program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    type_specifier                 shift and go to state 10
    program                        shift and go to state 86
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4

state 80

    (12) declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .

    IF              reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    WHILE           reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    FOR             reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    ID              reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    SWITCH          reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    INT             reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    CHAR            reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    VOID            reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    $end            reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    RBRACE          reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)
    BREAK           reduce using rule 12 (declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON .)


state 81

    (18) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    IF              reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    SWITCH          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    CHAR            reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    VOID            reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    BREAK           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 87


state 82

    (20) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    IF              reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    SWITCH          reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    CHAR            reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    VOID            reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    BREAK           reduce using rule 20 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 83

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 88


state 84

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER . COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE

    COLON           shift and go to state 89


state 85

    (7) params -> type_specifier ID COMMA params .

    RPAREN          reduce using rule 7 (params -> type_specifier ID COMMA params .)


state 86

    (10) declaration -> type_specifier ID LPAREN params RPAREN LBRACE program . RBRACE

    RBRACE          shift and go to state 90


state 87

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 91


state 88

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 92


state 89

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON . program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 93
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 90

    (10) declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .

    IF              reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    SWITCH          reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    CHAR            reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    VOID            reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)
    BREAK           reduce using rule 10 (declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE .)


state 91

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 94
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 92

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE . program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 95
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 93

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program . BREAK SEMICOLON DEFAULT COLON program RBRACE

    BREAK           shift and go to state 96


state 94

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE

    RBRACE          shift and go to state 97


state 95

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program . RBRACE

    RBRACE          shift and go to state 98


state 96

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK . SEMICOLON DEFAULT COLON program RBRACE

    SEMICOLON       shift and go to state 99


state 97

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    IF              reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FOR             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ID              reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    SWITCH          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INT             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    CHAR            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FLOAT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    VOID            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    BREAK           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)


state 98

    (21) statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .

    IF              reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    SWITCH          reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    CHAR            reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    VOID            reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)
    BREAK           reduce using rule 21 (statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE .)


state 99

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON . DEFAULT COLON program RBRACE

    DEFAULT         shift and go to state 100


state 100

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT . COLON program RBRACE

    COLON           shift and go to state 101


state 101

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON . program RBRACE
    (1) program -> . statements
    (14) statements -> . statement
    (15) statements -> . declaration
    (16) statements -> . statement statements
    (17) statements -> . declaration statements
    (18) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (20) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (21) statement -> . FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE
    (22) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE
    (8) declaration -> . type_specifier ID SEMICOLON
    (9) declaration -> . type_specifier ID LPAREN params RPAREN SEMICOLON
    (10) declaration -> . type_specifier ID LPAREN params RPAREN LBRACE program RBRACE
    (11) declaration -> . type_specifier ID LBRACE program RBRACE
    (12) declaration -> . type_specifier ID LBRACE program RBRACE SEMICOLON
    (13) declaration -> . type_specifier ID LBRACE RBRACE
    (2) type_specifier -> . INT
    (3) type_specifier -> . CHAR
    (4) type_specifier -> . FLOAT
    (5) type_specifier -> . VOID

    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    ID              shift and go to state 8
    SWITCH          shift and go to state 9
    INT             shift and go to state 11
    CHAR            shift and go to state 12
    FLOAT           shift and go to state 13
    VOID            shift and go to state 14

    program                        shift and go to state 102
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    type_specifier                 shift and go to state 10

state 102

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program . RBRACE

    RBRACE          shift and go to state 103


state 103

    (23) statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .

    IF              reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    WHILE           reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    FOR             reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    ID              reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    SWITCH          reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    INT             reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    CHAR            reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    FLOAT           reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    VOID            reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    $end            reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    RBRACE          reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)
    BREAK           reduce using rule 23 (statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MUL in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 61 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MUL in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 62 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MUL in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 63 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MUL in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MUL in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for DEQUALS in state 65 resolved as shift
