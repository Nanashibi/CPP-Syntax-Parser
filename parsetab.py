
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVIDEBREAK CASE CHAR COLON COMMA DEFAULT DEQUALS DIVIDE ELSE EQUALS FLOAT FOR GREATERTHAN GREATERTHANEQ ID IF INT LBRACE LESSTHAN LESSTHANEQ LPAREN MINUS MUL NUMBER PLUS RBRACE RPAREN SEMICOLON SWITCH VOID WHILEprogram : statements\n    type_specifier : INT\n                      | CHAR\n                      | FLOAT\n                      | VOID\n    params : type_specifier ID\n              | type_specifier ID COMMA params\n    declaration : type_specifier ID SEMICOLON\n                   | type_specifier ID LPAREN params RPAREN SEMICOLON\n                   | type_specifier ID LPAREN params RPAREN LBRACE program RBRACE\n                   | type_specifier ID LBRACE program RBRACE\n                   | type_specifier ID LBRACE program RBRACE SEMICOLON\n                   | type_specifier ID LBRACE RBRACE\n    statements : statement\n                  | declaration\n                  | statement statements\n                  | declaration statements\n    statement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                 | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE\n                 | WHILE LPAREN expression RPAREN LBRACE program RBRACE\n                 | FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE\n                 | ID EQUALS expression SEMICOLON\n                 | SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIVIDE expression\n                  | LPAREN expression RPAREN\n                  | expression LESSTHAN expression\n                  | expression GREATERTHAN expression\n                  | expression LESSTHANEQ expression\n                  | expression GREATERTHANEQ expression\n                  | expression DEQUALS expression\n                  | ID\n                  | NUMBER\n    assignment : ID EQUALS expression\n    '
    
_lr_action_items = {'IF':([0,3,4,32,34,49,54,56,66,72,78,79,80,81,82,89,90,91,92,97,98,101,103,],[5,5,5,-8,5,-22,-13,5,5,-11,-9,5,-12,-18,-20,5,-10,5,5,-19,-21,5,-23,]),'WHILE':([0,3,4,32,34,49,54,56,66,72,78,79,80,81,82,89,90,91,92,97,98,101,103,],[6,6,6,-8,6,-22,-13,6,6,-11,-9,6,-12,-18,-20,6,-10,6,6,-19,-21,6,-23,]),'FOR':([0,3,4,32,34,49,54,56,66,72,78,79,80,81,82,89,90,91,92,97,98,101,103,],[7,7,7,-8,7,-22,-13,7,7,-11,-9,7,-12,-18,-20,7,-10,7,7,-19,-21,7,-23,]),'ID':([0,3,4,10,11,12,13,14,17,18,19,20,21,23,32,34,37,38,39,40,41,42,43,44,45,47,48,49,51,54,56,66,72,75,78,79,80,81,82,89,90,91,92,97,98,101,103,],[8,8,8,22,-2,-3,-4,-5,25,25,29,25,25,25,-8,8,25,25,25,25,25,25,25,25,25,25,25,-22,70,-13,8,8,-11,29,-9,8,-12,-18,-20,8,-10,8,8,-19,-21,8,-23,]),'SWITCH':([0,3,4,32,34,49,54,56,66,72,78,79,80,81,82,89,90,91,92,97,98,101,103,],[9,9,9,-8,9,-22,-13,9,9,-11,-9,9,-12,-18,-20,9,-10,9,9,-19,-21,9,-23,]),'INT':([0,3,4,32,33,34,49,54,56,66,72,77,78,79,80,81,82,89,90,91,92,97,98,101,103,],[11,11,11,-8,11,11,-22,-13,11,11,-11,11,-9,11,-12,-18,-20,11,-10,11,11,-19,-21,11,-23,]),'CHAR':([0,3,4,32,33,34,49,54,56,66,72,77,78,79,80,81,82,89,90,91,92,97,98,101,103,],[12,12,12,-8,12,12,-22,-13,12,12,-11,12,-9,12,-12,-18,-20,12,-10,12,12,-19,-21,12,-23,]),'FLOAT':([0,3,4,32,33,34,49,54,56,66,72,77,78,79,80,81,82,89,90,91,92,97,98,101,103,],[13,13,13,-8,13,13,-22,-13,13,13,-11,13,-9,13,-12,-18,-20,13,-10,13,13,-19,-21,13,-23,]),'VOID':([0,3,4,32,33,34,49,54,56,66,72,77,78,79,80,81,82,89,90,91,92,97,98,101,103,],[14,14,14,-8,14,14,-22,-13,14,14,-11,14,-9,14,-12,-18,-20,14,-10,14,14,-19,-21,14,-23,]),'$end':([1,2,3,4,15,16,32,49,54,72,78,80,81,82,90,97,98,103,],[0,-1,-14,-15,-16,-17,-8,-22,-13,-11,-9,-12,-18,-20,-10,-19,-21,-23,]),'RBRACE':([2,3,4,15,16,32,34,49,53,54,72,73,74,78,80,81,82,86,90,94,95,97,98,102,103,],[-1,-14,-15,-16,-17,-8,54,-22,72,-13,-11,81,82,-9,-12,-18,-20,90,-10,97,98,-19,-21,103,-23,]),'BREAK':([2,3,4,15,16,32,49,54,72,78,80,81,82,90,93,97,98,103,],[-1,-14,-15,-16,-17,-8,-22,-13,-11,-9,-12,-18,-20,-10,96,-19,-21,-23,]),'LPAREN':([5,6,7,9,17,18,20,21,22,23,37,38,39,40,41,42,43,44,45,47,48,],[17,18,19,21,23,23,23,23,33,23,23,23,23,23,23,23,23,23,23,23,23,]),'EQUALS':([8,29,],[20,48,]),'NUMBER':([17,18,20,21,23,37,38,39,40,41,42,43,44,45,47,48,76,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,84,]),'SEMICOLON':([22,25,26,28,30,55,57,58,59,60,61,62,63,64,65,67,68,71,72,96,],[32,-34,-35,47,49,-28,-24,-25,-26,-27,-29,-30,-31,-32,-33,75,-36,78,80,99,]),'LBRACE':([22,36,46,50,71,87,88,],[34,56,66,69,79,91,92,]),'RPAREN':([24,25,26,27,31,35,52,55,57,58,59,60,61,62,63,64,65,68,70,83,85,],[36,-34,-35,46,50,55,71,-28,-24,-25,-26,-27,-29,-30,-31,-32,-33,-36,-6,88,-7,]),'PLUS':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[37,-34,-35,37,37,37,37,-28,-24,-25,-26,-27,37,37,37,37,37,37,37,]),'MINUS':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[38,-34,-35,38,38,38,38,-28,-24,-25,-26,-27,38,38,38,38,38,38,38,]),'MUL':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[39,-34,-35,39,39,39,39,-28,39,39,-26,-27,39,39,39,39,39,39,39,]),'DIVIDE':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[40,-34,-35,40,40,40,40,-28,40,40,-26,-27,40,40,40,40,40,40,40,]),'LESSTHAN':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[41,-34,-35,41,41,41,41,-28,-24,-25,-26,-27,41,41,41,41,41,41,41,]),'GREATERTHAN':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[42,-34,-35,42,42,42,42,-28,-24,-25,-26,-27,42,42,42,42,42,42,42,]),'LESSTHANEQ':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[43,-34,-35,43,43,43,43,-28,-24,-25,-26,-27,43,43,43,43,43,43,43,]),'GREATERTHANEQ':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[44,-34,-35,44,44,44,44,-28,-24,-25,-26,-27,44,44,44,44,44,44,44,]),'DEQUALS':([24,25,26,27,30,31,35,55,57,58,59,60,61,62,63,64,65,67,68,],[45,-34,-35,45,45,45,45,-28,-24,-25,-26,-27,45,45,45,45,45,45,45,]),'CASE':([69,],[76,]),'COMMA':([70,],[77,]),'ELSE':([81,],[87,]),'COLON':([84,100,],[89,101,]),'DEFAULT':([99,],[100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,34,56,66,79,89,91,92,101,],[1,53,73,74,86,93,94,95,102,]),'statements':([0,3,4,34,56,66,79,89,91,92,101,],[2,15,16,2,2,2,2,2,2,2,2,]),'statement':([0,3,4,34,56,66,79,89,91,92,101,],[3,3,3,3,3,3,3,3,3,3,3,]),'declaration':([0,3,4,34,56,66,79,89,91,92,101,],[4,4,4,4,4,4,4,4,4,4,4,]),'type_specifier':([0,3,4,33,34,56,66,77,79,89,91,92,101,],[10,10,10,51,10,10,10,51,10,10,10,10,10,]),'expression':([17,18,20,21,23,37,38,39,40,41,42,43,44,45,47,48,],[24,27,30,31,35,57,58,59,60,61,62,63,64,65,67,68,]),'assignment':([19,75,],[28,83,]),'params':([33,77,],[52,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','lex.py',108),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','lex.py',114),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','lex.py',115),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','lex.py',116),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','lex.py',117),
  ('params -> type_specifier ID','params',2,'p_params','lex.py',122),
  ('params -> type_specifier ID COMMA params','params',4,'p_params','lex.py',123),
  ('declaration -> type_specifier ID SEMICOLON','declaration',3,'p_declaration','lex.py',131),
  ('declaration -> type_specifier ID LPAREN params RPAREN SEMICOLON','declaration',6,'p_declaration','lex.py',132),
  ('declaration -> type_specifier ID LPAREN params RPAREN LBRACE program RBRACE','declaration',8,'p_declaration','lex.py',133),
  ('declaration -> type_specifier ID LBRACE program RBRACE','declaration',5,'p_declaration','lex.py',134),
  ('declaration -> type_specifier ID LBRACE program RBRACE SEMICOLON','declaration',6,'p_declaration','lex.py',135),
  ('declaration -> type_specifier ID LBRACE RBRACE','declaration',4,'p_declaration','lex.py',136),
  ('statements -> statement','statements',1,'p_statements','lex.py',148),
  ('statements -> declaration','statements',1,'p_statements','lex.py',149),
  ('statements -> statement statements','statements',2,'p_statements','lex.py',150),
  ('statements -> declaration statements','statements',2,'p_statements','lex.py',151),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement','lex.py',159),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','statement',11,'p_statement','lex.py',160),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement','lex.py',161),
  ('statement -> FOR LPAREN assignment SEMICOLON expression SEMICOLON assignment RPAREN LBRACE program RBRACE','statement',11,'p_statement','lex.py',162),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement','lex.py',163),
  ('statement -> SWITCH LPAREN expression RPAREN LBRACE CASE NUMBER COLON program BREAK SEMICOLON DEFAULT COLON program RBRACE','statement',15,'p_statement','lex.py',164),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lex.py',180),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lex.py',181),
  ('expression -> expression MUL expression','expression',3,'p_expression','lex.py',182),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lex.py',183),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','lex.py',184),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','lex.py',185),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','lex.py',186),
  ('expression -> expression LESSTHANEQ expression','expression',3,'p_expression','lex.py',187),
  ('expression -> expression GREATERTHANEQ expression','expression',3,'p_expression','lex.py',188),
  ('expression -> expression DEQUALS expression','expression',3,'p_expression','lex.py',189),
  ('expression -> ID','expression',1,'p_expression','lex.py',190),
  ('expression -> NUMBER','expression',1,'p_expression','lex.py',191),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','lex.py',199),
]
